# aрифметические операторы:
# +	cложение
# -	вычитание
# *	умножение
# /	деление (всегда float)
# //	целочисленное деление	10 // 3 ->	3
# %	остаток от деления	10 % 3 ->	1
# **	возведение в степень

# операторы сравнения:
# ==	равно	5 == 5	True
# !=	не равно	5 != 4	True
# >	больше	6 > 2	True
# <	меньше	3 < 4	True
# >=	больше или равно	5 >= 5	True
# <=	меньше или равно	2 <= 3	True

# операторы присваивания
# =	простое присваивание
# +=	прибавить и присвоить	x += 2	=> x=x+2
# -=	вычесть и присвоить	x -= 1	=> x=x-1
# *=	умножить и присвоить	x *= 3	=> x=x*3
# /=	разделить и присвоить	x /= 2	=> x=x/2
# //=	целочисленное деление	x //= 2	=> x=x//2
# %=	остаток и присвоить	x %= 2	=> x=x%2
# **=	возвести в степень и присвоить	x **= 2	=> x=x**2

# логические операторы(работают с True и False):
# and	-логическое И True and False	-> False
# or	-логическое ИЛИ	True or False	-> True
# not	-логическое НЕ not True	-> False

# операторы принадлежности:
# in	-проверка вхождения	'a' in 'cat'	-> True
# not in	-проверка отсутствия вхождения	'a' not in 'cat'	-> False

# операторы идентичности(сравнение по объекту, не по значению):
# is	-являются ли объекты одним и тем же	a is b ->	True/False
# is not	-не являются одним объектом	a is not b	-> True/False

# побитовые операторы:
# они работают с двоичными представлениями чисел(битами)
# исп. в системном програмировании, разработке драйверов и встроеных систем(embedded) криптографии
# исп. в сжатие и обработка данных, графика и игры, сетевое программирование, алгоритмы и структуры данных
# безопасность и шифрование, работа с низкоуровневыми данными
# быстроя упаковка/распаковка информации
# управление флагами и настройками в виде битов
# pабота с регистрами процессора,портами ввода-вывода,памятью
# &	-AND	=> 5 & 3	=> 0b0101 & 0b0011 = 0b0001 → 1
# |	-OR	=> 5 | 3	=> 0b0101 | 0b0011 = 0b0111 → 7
# ^	-XOR (еxclusive OR)	=> 5 ^ 3	0b0101 ^ 0b0011 = 0b0110 → 6
# ~	-NOT	=> ~5	инвертирует все биты (даёт -6)
# <<	Сдвиг влево	5 << 1	0b0101 → 0b1010 → 10   -nри сдвиге влево справа добавляются нули
# >>	Сдвиг вправо	5 >> 1	0b0101 → 0b0010 → 2  -при сдвиге вправо слева добавляются нули


default_settings = 0b0000
LIGHT_ON = 0b0001
VIDEO_ON = 0b0010
SOUND_ON = 0b0100
GATE_OPEN = 0b1000

# 1=0b0001
LIGHT_ON = 1 << 0  # 0b0001
VIDEO_ON = 1 << 1  # 0b0010
SOUND_ON = 1 << 2  # 0b0100
GATE_OPEN = 1 << 3  # 0b1000

settings = default_settings

settings_light_on = settings | LIGHT_ON  # 0b0001
# ~LIGHT_ON=0b1110
settings_light_off = settings_light_on & ~LIGHT_ON  # 0b0000

light_check = settings & LIGHT_ON
if light_check:
    print("Light ON")  # light_check=0b0001
else:
    print("Light OFF")  # light_check=0b0000

turn_on_video_sound = settings | VIDEO_ON | SOUND_ON  # 0b0110
# ~SOUND_ON=0b1011
turn_off_sound = turn_on_video_sound & ~SOUND_ON  # 0b0010
